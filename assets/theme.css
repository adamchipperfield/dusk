/**
 * Buttons.
 */
.button,
.shopify-payment-button .shopify-payment-button__button--unbranded {
  /**
   * Resets button defaults.
   */
  background: none;
  border: 0;
  color: inherit;
  padding: 0;

  /**
   * Button styles.
   */
  align-items: center;
  background: none;
  background-color: var(--color-primary-button-background);
  border: 1px solid var(--color-primary-button-border);
  border-radius: var(--button-border-radius);
  color: inherit;
  color: var(--color-primary-button-label);
  cursor: pointer;
  display: inline-flex;
  font-weight: var(--font-weight-medium);
  justify-content: center;
  min-height: var(--button-height);
  padding: 0;
  padding-block: var(--spacing-12);
  padding-inline: var(--spacing-32);
  text-align: center;
  text-decoration: none;
  transition:
    color 0.1s ease,
    background-color 0.1s ease;
  white-space: nowrap;
}

.button:not([disabled]):hover,
.shopify-payment-button .shopify-payment-button__button--unbranded:not([disabled]):hover {
  background-color: var(--color-primary-button-background-hover);
  border-color: var(--color-primary-button-border-hover);
  color: var(--color-primary-button-label-hover);
}

.button[disabled],
.shopify-payment-button .shopify-payment-button__button--unbranded[disabled] {
  background-color: var(--color-primary-button-background);
  border-color: var(--color-primary-button-border);
  color: var(--color-primary-button-label);
  cursor: not-allowed;
  opacity: 0.5;
}

.button--block {
  width: 100%;
}

.button--small {
  font-size: var(--font-size-12);
  min-height: var(--button-height-small);
  padding-block: var(--spacing-8);
  padding-inline: var(--spacing-24);
}

.button--secondary,
.shopify-payment-button .shopify-payment-button__button--unbranded {
  background-color: var(--color-secondary-button-background);
  border-color: var(--color-secondary-button-border);
  color: var(--color-secondary-button-label);
}

.button--secondary:hover,
.shopify-payment-button .shopify-payment-button__button--unbranded:hover {
  background-color: var(--color-secondary-button-background-hover);
  border-color: var(--color-secondary-button-border-hover);
  color: var(--color-secondary-button-label-hover);
}

.button-group {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-8);
}

.button-group--inline {
  flex-direction: row;
}

/**
 * Pills and swatches.
 */
.pill {
  background-color: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: 20px;
  color: var(--color-text);
  cursor: pointer;
  display: block;
  font-size: var(--font-size-14);
  font-weight: var(--font-weight-regular);
  margin: 0;
  padding-block: var(--spacing-4);
  padding-inline: var(--spacing-12);
  text-align: center;
}

.pill--inline {
  display: inline-block;
}

.pill--small {
  font-size: var(--font-size-12);
  padding-block: var(--spacing-2);
  padding-inline: var(--spacing-8);
}

:is(input[type='radio'], input[type='checkbox']):checked + .pill {
  border-color: var(--color-text);
}

:is(input[type='radio'], input[type='checkbox']):disabled + :is(.pill, .swatch) {
  cursor: not-allowed;
  opacity: 0.25;
}

.swatch {
  aspect-ratio: 1;
  background-position: center;
  background-size: cover;
  border: 2px solid var(--color-background);
  border-radius: 50%;
  cursor: pointer;
  display: block;
  font-size: 0;
  outline: 1px solid var(--color-border);
  width: 30px;
}

.swatch--small {
  width: 24px;
}

:is(input[type='radio'], input[type='checkbox']):checked + .swatch {
  outline-color: var(--color-text);
}

/**
 * Bubble.
 */
.bubble {
  --size: 22px;
  --padding: 0.375rem;
  --font-size: var(--font-size-12);
  align-items: center;
  background-color: var(--color-border);
  border-radius: 50px;
  display: flex;
  font-size: var(--font-size);
  justify-content: center;
  line-height: 1;
  max-height: var(--size);
  min-width: var(--size);
  min-height: var(--size);
  padding-block: var(--padding);
  padding-inline: var(--padding);
  text-align: center;
}

.bubble--small {
  --font-size: 0.625rem;
  --padding: var(--spacing-4);
  --size: 16px;
}

.bubble--button {
  background-color: var(--color-primary-button-background);
  color: var(--color-primary-button-label);
}

/**
 * Badges.
 */
.badges {
  display: flex;
  gap: var(--spacing-12);
}

.badge {
  font-size: var(--font-size-14);
}

/**
 * Drawer overlay.
 */
.drawer {
  background-color: var(--color-background);
  display: flex;
  flex-direction: column;
  height: 100%;
  max-width: 90%;
  width: 400px;
}

.drawer__header,
.drawer__body,
.drawer__footer {
  padding-block: var(--spacing-16);
  padding-inline: var(--container-gutter);
}

.drawer__header + .drawer__body {
  padding-block-start: 0;
}

.drawer__header {
  align-items: baseline;
  display: flex;
  gap: var(--spacing-16);
}

.drawer__header .drawer__close {
  margin-inline-start: auto;
}

.drawer__body {
  flex-grow: 1;
  overflow-y: auto;
}

/**
 * Modal overlay.
 */
.modal {
  background-color: var(--color-background);
  height: min-content;
  max-height: 90%;
  max-width: 90%;
  width: min-content;
}

/**
 * Dialog window.
 */
.dialog-window {
  background-color: transparent;
  cursor: pointer;
  height: 100%;
  inset: 0;
  pointer-events: none;
  position: fixed;
  transition: background-color 0.2s ease-out;
  width: 100%;
  z-index: 12;
}

/** Fix: ensures that any sticky containers allow the dialog window to appear above the header */
.dialog-window-container:has(.dialog-window.is-open, .dialog-window.is-transitioning) {
  z-index: 12;
}

.dialog-window.is-open {
  background-color: var(--color-backdrop);
  pointer-events: auto;
}

.dialog-window .drawer {
  cursor: auto;
  position: fixed;
  right: 0;
  top: 0;
  transform: translateX(100%);
  transition: transform 0.2s ease-in-out;
}

.dialog-window .drawer--left {
  left: 0;
  right: unset;
  transform: translateX(-100%);
}

.dialog-window.is-open > :is(.drawer, *:not(.dialog-window) .drawer) {
  transform: none;
}

.dialog-window .modal {
  inset: 0;
  margin: auto;
  opacity: 0;
  pointer-events: none;
  position: fixed;
  transform: translateY(5%);
  transition:
    opacity 0.2s ease-in-out,
    transform 0.2s ease-in-out;
}

.dialog-window.is-open > :is(.modal, *:not(.dialog-window) .modal) {
  opacity: 1;
  pointer-events: auto;
  transform: none;
}
